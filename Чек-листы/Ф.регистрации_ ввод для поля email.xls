
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <head>
        <meta name="author" content="dev.sitechco.ru" />
    </head>
<table  border="1">
    <tr>
        <td colspan="4">Название (Аббр.): Ф. регистрации: ввод для поля email (EMRG)</td>
    </tr>
    <tr>
        <td colspan="4">Описание: Необходимо по чит-листу "Поле email" выполнить проверки заполнения поля почты на предмет возможности (невозможности) регистрации с валидным (невалидным) вводом email, а также на предмет появления оповещений для пользователя о некорректном вводе</td>
    </tr>
            <tr>
        <td colspan="4">Статус: Не согласован </td>
    </tr>
            <tr>
        <td colspan="4" style="background-color: #ced1d1;">Группа тестов без названия</td>
    </tr>
    <tr>
        <td colspan="4" style="background-color: #ced1d1;"></td>
    </tr>
    <tr>
        <td>№</td>
        <td>Приоритет</td>
        <td>Проверка</td>
                <td>Результат</td>
                    </tr>
        <tr>
        <td>
            1        </td>
        <td>
            Средний        </td>
        <td>Вводим поочередно все проверки из чит-листа "Поле email" в поле почтового ящика и анализируем, выводит ли программа оповещения о некорректном вводе email. <br />
В тоже время каждую проверку из чит-листа сопровождаем попыткой выполнить и саму регистрацию (см след. проверку ↓ )</td>
                <td>Все оповещения о некорректных вводах показываются пользователю красным текстом</td>
                    </tr>
        <tr>
        <td>
            2        </td>
        <td>
            Средний        </td>
        <td>Вводя поочередно проверки из чит-листа в поле email, нажимаем кнопку Регистрации</td>
                <td>Регистрация происходит, если ввод email валидный и не происходит, если ввод email не валиден</td>
                    </tr>
            </table>

<!-- Yandex.Metrika counter -->
<script type="text/javascript"> 
(function (d, w, c) { (w[c] = w[c] || []).push(function() {
	try { w.yaCounter43980704 = new Ya.Metrika({
			id:43980704,
			clickmap:true,
			trackLinks:true,
			accurateTrackBounce:true
		}); }
	catch(e) { } });
	var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); };
	s.type = "text/javascript"; s.async = true;
	s.src = "https://mc.yandex.ru/metrika/watch.js";
	if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); }
	else { f(); } })(document, window, "yandex_metrika_callbacks");
</script>
<noscript><div><img src="https://mc.yandex.ru/watch/43980704" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
<!-- /Yandex.Metrika counter -->
